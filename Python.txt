官网
https://www.python.org/
https://docs.python.org/3/   #文档总览
https://docs.python.org/3/reference/index.html # 语言参考
https://docs.python.org/3/library/index.html # 标准库
https://docs.python.org/3/c-api/index.html    #C/C++参考
https://docs.python.org/3/extending/index.html #C/C++参考

1 Python操作ftp
https://docs.python.org/3.8/library/ftplib.html

2 http操作，对比requests
https://docs.python.org/zh-cn/3.8/library/http.html

3 requests
https://docs.python-requests.org/en/latest/user/install/

4 测试工具
集合地址
https://wiki.python.org/moin/PythonTestingToolsTaxonomy

python自带unittest 
https://docs.python.org/zh-cn/3/library/unittest.html
 python自带pdb
https://docs.python.org/zh-cn/3/library/pdb.html

pytest地址
https://pytest.org/en/latest/

5 ssh操作，借助paramiko
https://www.paramiko.org/
https://docs.paramiko.org/en/stable/

6 拓扑排序
https://pypi.org/project/toposort/

7 DFS与BFS
https://eddmann.com/posts/depth-first-search-and-breadth-first-search-in-python/

8 包导入
https://docs.python.org/zh-cn/3.8/reference/import.html
有关 __main__ 的特殊事项
https://docs.python.org/zh-cn/3.8/reference/import.html

9 表达式
https://docs.python.org/zh-cn/3.8/reference/expressions.html

10 全局解释器锁
https://docs.python.org/zh-cn/3.8/glossary.html#term-global-interpreter-lock

11 基于线程的并行
https://docs.python.org/zh-cn/3.8/library/threading.html

12 基于进程的并行
https://docs.python.org/zh-cn/3.8/library/multiprocessing.html
三种启动方法
关于为什么 if __name__ == '__main__' 部分是必需的解释：从而保护程序"入口点":
https://docs.python.org/zh-cn/3.8/library/multiprocessing.html#multiprocessing-programming
---------------------------------------------------------------------------------------------------------------
from multiprocessing import Pool

def f(x):
    return x*x

if __name__ == '__main__':
    with Pool(5) as p:
        print(p.map(f, [1, 2, 3]))
---------------------------------------------------------------------------------------------------------------
新的方式
https://docs.python.org/zh-cn/3.8/library/concurrent.futures.html
ThreadPoolExecutor
https://docs.python.org/zh-cn/3.8/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor
ProcessPoolExecutor
https://docs.python.org/zh-cn/3.8/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor
-------------------------------------------------------------------------------------------------------------------------
import concurrent.futures
import math

PRIMES = [
    112272535095293,
    112582705942171,
    112272535095293,
    115280095190773,
    115797848077099,
    1099726899285419]

def is_prime(n):
    if n < 2:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False

    sqrt_n = int(math.floor(math.sqrt(n)))
    for i in range(3, sqrt_n + 1, 2):
        if n % i == 0:
            return False
    return True

def main():
    with concurrent.futures.ProcessPoolExecutor() as executor:
        for number, prime in zip(PRIMES, executor.map(is_prime, PRIMES)):
            print('%d is prime: %s' % (number, prime))

if __name__ == '__main__':
    main()
------------------------------------------------------------------------------------------------------------------

13 子进程
https://docs.python.org/zh-cn/3.8/library/subprocess.html

14 sched 事件调度器
https://docs.python.org/zh-cn/3.8/library/sched.html

15 queue 一个同步的队列类
https://docs.python.org/zh-cn/3.8/library/queue.html

16 发送邮件
 smtp
https://docs.python.org/zh-cn/3.8/library/smtplib.html
email
https://docs.python.org/zh-cn/3.8/library/email.examples.html

17 异步async await 
https://docs.python.org/zh-cn/3.8/library/asyncio-dev.html

18 ctypes python调用外部C
https://docs.python.org/zh-cn/3.8/library/ctypes.html

19 Cython  python调用C/C++
https://cython.org/
https://cython.readthedocs.io/en/stable/index.html

20 使用cmake阅读开发源码（官方版构建方式特殊）
git://github.com/python-cmake-buildsystem/python-cmake-buildsystem

21 函数filter zip map reduce （类比spark的MR过程）
https://docs.python.org/3/library/functional.html

22 __main__解释
https://docs.python.org/3/library/__main__.html

23 abc 抽象基类
https://docs.python.org/3/library/abc.html

24 GC 垃圾回收
https://docs.python.org/3/library/gc.html

25 通过 Windows 开始使用 Python
https://docs.microsoft.com/zh-cn/windows/python/

26 subprocess 子进程调用
-------------------------------------------------------------------------------------------------------------------------------------------------------
# 此处仅展示常用几种方法，注意命令中的 引号
import os
import subprocess

cmd = '"D:\\Program Files\\7-Zip\\7z.exe" x "D:\\media\\Download\\zzzz.zip" -y -aoa -o"D:\\media\\Download"'
cmd2 = '"D:\Program Files\7-Zip\7z.exe" x "D:\media\Download\zzzz.zip" -y -aoa -o"D:\media\Download"'
cmd3 = "cd/d D:\\project\\各种问题\\&&D:\\programdata\\miniconda3\\envs\\yyy\\python.exe xxx.py"
cmd3="cd/d D:\project\各种问题\&&D:\programdata\miniconda3\envs\yyy\python.exe xxx.py"

# result = os.system(cmd3) # 传统方式

# result = subprocess.check_output(cmd3,shell=True) # 可以捕获输出
result = subprocess.run(cmd3, shell=True,capture_output=True, text=True) # 比较清晰捕获输出
print(result)
# print(result.returncode,result.stdout,result.stderr,result.args)
--------------------------------------------------------------------------------------------------------------------------------------------------------

27 MQTT 消息队列传输协议，物联网轻量级消息队列服务
https://pypi.org/project/paho-mqtt/

28 python redis 客户端
https://pypi.org/project/redis/

29 连接HBase Impala Hive Presto Kafka RabbitMQ
使用pyhive  impyla happybase kafka-python ampq mqtt等等

30 报错：
pyodbc.ProgrammingError: ('42000', '[42000] [Microsoft][SQL Server Native Client 11.0][SQL Server]无法执行该操作，因为链接服务器 "BAIDUCLOUD4" 的 OLE DB 访问接口 "SQLNCLI11" 无法启动分布式事务。 (7391) (SQLExecDirectW); [42000] [Microsoft][SQL Server Native Client 11.0][SQL Server]链接服务器"BAIDUCLOUD4"的 OLE DB 访问接口 "SQLNCLI11" 返回了消息 "该伙伴事务管理器已经禁止了它对远程/网络事务的支持。"。 (7412)')
解决： 去掉SQL事务代码，可能需要关闭计数，设置conn连接的 autocommit=True 

31 移除导入的模块，import的逆操作
del 模块名称

32 错误提示  lstat: path should be string, bytes or os.PathLike, not module
原因：不能用os.remove删除 模块或包。应该使用安装卸载的方法（或者通过shell删除复制，rm -rf 包位置）。